services:
  # Base de donn√©es PostgreSQL
  postgresql:
    image: postgres:15-alpine
    container_name: postgresql
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # API Java Spring Boot
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - postgresql
    volumes:
      - api_logs:/app/logs

  # PgAdmin
  pgadmin:
    image: dpage/pgadmin4:8.2
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - postgresql
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    # driver: local
  pgadmin_data:
  api_logs:

networks:
  default:
    name: cine-network
